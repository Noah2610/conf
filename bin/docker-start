#!/bin/bash

container=
dir=
compose="true"

# Determine container to start
if [ -n "$1" ]; then
  case "$1" in
    db)
      container="fragebogendeutschebahn_web_1"
      dir="$HOME/Projects/AWARE/www/fragebogen-deutschebahn"
      ;;
    audi)
      container="audi-fragebogen_web_1"
      dir="$HOME/Projects/AWARE/www/audi-fragebogen"
      ;;
    acc*)
      container="accounting_app_1"
      dir="$HOME/Projects/AWARE/www/accounting"
      ;;
    tnoe*)
      container="tnoememegenerator_app"
      dir="$HOME/Projects/AWARE/www/tnoe-meme-generator"
      ;;
    *)
      container="$1"
      ;;
  esac
else
  echo "docker-start: Error: No container name or alias given."
  exit
fi

# Determine command to use (docker-compose / docker)
if [ -n "$2" ]; then
  case "$2" in
    comp*)
      compose="true"
      ;;
    dock*)
      compose="false"
      ;;
    *)
      compose="true"
      ;;
  esac
else
  compose="true"
fi

#inspect_out="$( docker container inspect "$container" 2> /dev/null )"  # Redirect stderr, this script outputs error to stdout
#if [ "$inspect_out" == "[]" ]; then
#  echo "docker-start: Error: Container '$container' doesn't exist."
#  exit
#fi

# Change directory to proper project directory for docker-compose to work.
# If no directory defined or doesn't exist, don't use docker-compose, use docker instead.
if [[ -n "$dir" && -d "$dir" && "$compose" == "true" ]]; then
  cd "$dir"
  echo -e "docker-start: Using 'docker-compose'.\n  Current directory: '$( pwd )'"
  docker-compose up -d && docker attach "$container"
else
  echo -e "docker-start: Using 'docker'."
  docker container start "$container" -a
fi
echo "docker-start: Exited, container shutdown."

