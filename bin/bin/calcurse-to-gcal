#!/bin/bash

set -e
prog_name="$( basename "$0" )"

# https://stackoverflow.com/a/17841619
function join_by { local d=$1; shift; echo -n "$1"; shift; printf "%s" "${@/#/$d}"; }

function message {
  local msg
  msg="$( join_by "\n  " "$prog_name" "$@" )"
  echo -e "$msg"
}

function error {
  local msg
  msg="$( join_by "\n  " "$prog_name ERROR" "$@" "Exiting." )"
  (>&2 echo -e "$msg")
  exit 1
}

function validate_program_available {
  if ! command -v "$1" &> /dev/null; then
    error "'${1}' program is not available."
  fi
}

function validate_gcalendar_available {
  local calendar
  local calendars
  calendar="$1"
  calendars=($( gcalcli --nocache --nocolor list | grep -E '^\s+owner\s+.+$' | sed 's/\s\+owner\s\+//' ))
  [[ "${calendars[*]}" =~ "$calendar" ]] || error "Google Calendar '${calendar}' is not available."
}

function on_kill {
  [ -f "$lock_file" ] && rm "$lock_file"
}

trap on_kill SIGINT SIGTERM

validate_program_available calcurse
validate_program_available gcalcli

calendar_convert_script="ical-convert"
validate_program_available $calendar_convert_script

calcurse_root="${HOME}/.calcurse"
calcurse_apts_root="${calcurse_root}/calendars"
calcurse_apts_profile_default="default"
calcurse_apts_profile="$1"
[ -z "$calcurse_apts_profile" ]             && calcurse_apts_profile="$CALCURSE_CALENDAR"
[ -z "$calcurse_apts_profile" ]             && calcurse_apts_profile="$( hostname )"
[ "$calcurse_apts_profile" == "localhost" ] && calcurse_apts_profile="$calcurse_apts_profile_default"
calcurse_apts_file="${calcurse_apts_root}/${calcurse_apts_profile}.apts"

gcal_calendar_prefix="calcurse_"
gcal_calendar="${gcal_calendar_prefix}${calcurse_apts_profile}"

lock_file="${calcurse_root}/.calcurse-to-gcal.${calcurse_apts_profile}.lock"

[ -f "$calcurse_apts_file" ] || error "Calcurse calendar file '${calcurse_apts_file}' does not exist or is a directory."

validate_gcalendar_available "$gcal_calendar"

[ -f "$lock_file" ] && error "Lock-file '${lock_file}' exists." "Another instance of ${prog_name} is probably running."

touch "$lock_file"

message "Deleting all existing events from Google Calendar '${gcal_calendar}'."
gcalcli --nocache --calendar "$gcal_calendar" delete --iamaexpert '*' 1> /dev/null
message "Exporting Calcurse calendar '${calcurse_apts_file}'," "adjusting values, and" "importing to Google Calendar '${gcal_calendar}'."
calcurse -c "$calcurse_apts_file" --export=ical | $calendar_convert_script - | gcalcli --nocache --calendar "$gcal_calendar" import 1> /dev/null
message "Done!"

rm "$lock_file"
